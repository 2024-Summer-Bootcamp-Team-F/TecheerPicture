# nginx에 백엔드 연결
upstream backend {
    server backend:8000;
}

server {
    listen 80;
    server_name techeerpicture.store www.techeerpicture.store;
    server_tokens off;

    # 요청받은 uri로 연결
    location /api/ {
        proxy_pass http://backend;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
    }

    # ignore cache frontend
    location ~* (service-worker\.js)$ {
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        expires off;
        proxy_no_cache 1;
    }

    location / {
        root /var/www/frontend;
        try_files $uri $uri/ /index.html?q=$uri&$args;
        # index index.html;
        # try_files $uri $uri/ /index.html;
    }
}


    # server_name techeerpicture.store www.techeerpicture.store;
    # charset utf-8;

    # location /healthcheck {
    #     access_log off;
    #     return 200 'OK';
    # }

    # # Http로 들어온 요청을 Https로 Redirect
    # location / {
    #     return 301 https://$host$request_uri;
    # }
# }
# server {
#     listen 443;
#     server_name techeerpicture.store www.techeerpicture.store;
#     server_tokens off;

#     # 요청받은 uri로 연결
#     location /api/ {
#         proxy_pass http://backend;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header Host $http_host;
#         proxy_redirect off;
#     }

#     # ignore cache frontend
#     location ~* (service-worker\.js)$ {
#         add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
#         expires off;
#         proxy_no_cache 1;
#     }

#     location / {
#         root /var/www/frontend;
#         index index.html;
#         try_files $uri $uri/ /index.html;
#     }

# }